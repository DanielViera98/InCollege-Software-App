============================= test session starts ==============================
platform linux -- Python 3.10.8, pytest-7.2.1, pluggy-1.0.0
rootdir: /home/runner/InCollege-Software-App
collected 11 items

Tests/testrunner_jobs.py ..FFFF.....                                     [100%]

=================================== FAILURES ===================================
_ test_post_jobs[\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n-False] _

capsys = <_pytest.capture.CaptureFixture object at 0x7f4f6bea5d20>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f4f6bea5de0>
input = <_io.StringIO object at 0x7f4f6be97010>, results = False

    @pytest.mark.parametrize("input, results", [('First\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', True), ('\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Third\n\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Fourth\nRecruiter\n\nDaniel Viera\nFlorida\n10$\n', False), ('Fifth\nRecruiter\nRecruit people\n\nFlorida\n10$\n', False), ('Sixth\nRecruiter\nRecruit people\nDaniel Viera\n\n10$\n', False), ('Seventh\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n\n', False), ('\n\n\n\n\n\n\n', False), ('\'None\'\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Firstttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False)])
    #Username, job_title, description, employer, location, salary.
    #Tests correct input, every empty field, all empty fields, long input
    #Empty fields will fail because checks currently not implemented due to not being required
    def test_post_jobs(capsys, monkeypatch, input, results):
      input = StringIO(input)
      monkeypatch.setattr('sys.stdin', input)
>     assert college.post_jobs() == results
E     assert True == False
E      +  where True = <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>>()
E      +    where <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>> = <App.InCollege object at 0x7f4f6bea4910>.post_jobs

Tests/testrunner_jobs.py:20: AssertionError
----------------------------- Captured stdout call -----------------------------
Username: Job Title: Description: Employer: Location: salary: 
_ test_post_jobs[Third\n\nRecruit people\nDaniel Viera\nFlorida\n10$\n-False] __

capsys = <_pytest.capture.CaptureFixture object at 0x7f4f6bea7e20>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f4f6bea7dc0>
input = <_io.StringIO object at 0x7f4f6be96a70>, results = False

    @pytest.mark.parametrize("input, results", [('First\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', True), ('\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Third\n\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Fourth\nRecruiter\n\nDaniel Viera\nFlorida\n10$\n', False), ('Fifth\nRecruiter\nRecruit people\n\nFlorida\n10$\n', False), ('Sixth\nRecruiter\nRecruit people\nDaniel Viera\n\n10$\n', False), ('Seventh\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n\n', False), ('\n\n\n\n\n\n\n', False), ('\'None\'\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Firstttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False)])
    #Username, job_title, description, employer, location, salary.
    #Tests correct input, every empty field, all empty fields, long input
    #Empty fields will fail because checks currently not implemented due to not being required
    def test_post_jobs(capsys, monkeypatch, input, results):
      input = StringIO(input)
      monkeypatch.setattr('sys.stdin', input)
>     assert college.post_jobs() == results
E     assert True == False
E      +  where True = <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>>()
E      +    where <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>> = <App.InCollege object at 0x7f4f6bea4910>.post_jobs

Tests/testrunner_jobs.py:20: AssertionError
----------------------------- Captured stdout call -----------------------------
Username: Job Title: Description: Employer: Location: salary: 
___ test_post_jobs[Fourth\nRecruiter\n\nDaniel Viera\nFlorida\n10$\n-False] ____

capsys = <_pytest.capture.CaptureFixture object at 0x7f4f6bea66e0>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f4f6bea6d10>
input = <_io.StringIO object at 0x7f4f6be970a0>, results = False

    @pytest.mark.parametrize("input, results", [('First\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', True), ('\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Third\n\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Fourth\nRecruiter\n\nDaniel Viera\nFlorida\n10$\n', False), ('Fifth\nRecruiter\nRecruit people\n\nFlorida\n10$\n', False), ('Sixth\nRecruiter\nRecruit people\nDaniel Viera\n\n10$\n', False), ('Seventh\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n\n', False), ('\n\n\n\n\n\n\n', False), ('\'None\'\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Firstttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False)])
    #Username, job_title, description, employer, location, salary.
    #Tests correct input, every empty field, all empty fields, long input
    #Empty fields will fail because checks currently not implemented due to not being required
    def test_post_jobs(capsys, monkeypatch, input, results):
      input = StringIO(input)
      monkeypatch.setattr('sys.stdin', input)
>     assert college.post_jobs() == results
E     assert True == False
E      +  where True = <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>>()
E      +    where <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>> = <App.InCollege object at 0x7f4f6bea4910>.post_jobs

Tests/testrunner_jobs.py:20: AssertionError
----------------------------- Captured stdout call -----------------------------
Username: Job Title: Description: Employer: Location: salary: 
___ test_post_jobs[Fifth\nRecruiter\nRecruit people\n\nFlorida\n10$\n-False] ___

capsys = <_pytest.capture.CaptureFixture object at 0x7f4f6bea6b30>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f4f6bea6ad0>
input = <_io.StringIO object at 0x7f4f6be971c0>, results = False

    @pytest.mark.parametrize("input, results", [('First\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', True), ('\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Third\n\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Fourth\nRecruiter\n\nDaniel Viera\nFlorida\n10$\n', False), ('Fifth\nRecruiter\nRecruit people\n\nFlorida\n10$\n', False), ('Sixth\nRecruiter\nRecruit people\nDaniel Viera\n\n10$\n', False), ('Seventh\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n\n', False), ('\n\n\n\n\n\n\n', False), ('\'None\'\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False), ('Firstttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n', False)])
    #Username, job_title, description, employer, location, salary.
    #Tests correct input, every empty field, all empty fields, long input
    #Empty fields will fail because checks currently not implemented due to not being required
    def test_post_jobs(capsys, monkeypatch, input, results):
      input = StringIO(input)
      monkeypatch.setattr('sys.stdin', input)
>     assert college.post_jobs() == results
E     assert True == False
E      +  where True = <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>>()
E      +    where <bound method InCollege.post_jobs of <App.InCollege object at 0x7f4f6bea4910>> = <App.InCollege object at 0x7f4f6bea4910>.post_jobs

Tests/testrunner_jobs.py:20: AssertionError
----------------------------- Captured stdout call -----------------------------
Username: Job Title: Description: Employer: Location: salary: 
=========================== short test summary info ============================
FAILED Tests/testrunner_jobs.py::test_post_jobs[\nRecruiter\nRecruit people\nDaniel Viera\nFlorida\n10$\n-False]
FAILED Tests/testrunner_jobs.py::test_post_jobs[Third\n\nRecruit people\nDaniel Viera\nFlorida\n10$\n-False]
FAILED Tests/testrunner_jobs.py::test_post_jobs[Fourth\nRecruiter\n\nDaniel Viera\nFlorida\n10$\n-False]
FAILED Tests/testrunner_jobs.py::test_post_jobs[Fifth\nRecruiter\nRecruit people\n\nFlorida\n10$\n-False]
========================= 4 failed, 7 passed in 0.07s ==========================
